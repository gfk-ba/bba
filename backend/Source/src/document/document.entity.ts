/**
 * This files contains the entity class for the document
 */

/**
 * import all decorator from typeorm
 */
import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';

/**
 * The class Document is used with the ORM TypeORM to access data in the database table documents.
 */
@Entity('documents')
export class Document {
  /**
   * The ID (primary key) of the table (autogenerated)
   */
  @PrimaryGeneratedColumn()
  id: number;

  /**
   * The hashed data of the document
   */
  @Column({ type: 'varchar', length: 128 })
  hash: string;

  /**
   * The id of the project to which the document belongs (foreign key)
   */
  @Column({ type: 'int', name: 'project_id' })
  projectId: number;

  /**
   * The kind (type) of the document, must be choosen by the user in the frontend.
   */
  @Column({ type: 'varchar', length: 10 })
  kind: string;

  /**
   * The description of the document, can be provided by the user in the frontend.
   */
  @Column({ type: 'varchar', length: 255 })
  description: string;

  /**
   * The etherum address of the document
   */
  @Column({ type: 'varchar', length: 42, nullable: true })
  address: string;

  /**
   * The current state of the document (e.g. whether the document is saved the blockchain).
   * Could be OK, ERROR, PROGRESS...
   */
  @Column({ type: 'varchar', length: 10, default: 'PROGRESS' })
  state: string;

  /**
   * Details about the state of the document, especially error messages if something went wrong.
   */
  @Column({ type: 'varchar', length: 255, name: 'state_details', default: '' })
  stateDetails: string;

  /**
   * The timestamp when the document was stored in the database. \
   * Note: "timestamptz" is NOT a typo, but prevents SQL errors because timestamp is a reserved word.
   */
  @Column({ type: 'timestamptz', name: 'created_at', nullable: true })
  createdAt: Date;
}
