{
  "name": "gfk-bba-frontend",
  "version": "1.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "watch": "ng serve --hmr --aot",
    "watch:jit": "ng serve --hmr",
    "backend:mock": "json-server mock/db.json --port 80 --delay 500",
    "build": "ng build",
    "lint": "ng lint",
    "commit": "git-cz",
    "docs": "compodoc -p src/tsconfig.app.json --silent -d ../docs/frontend --disableCoverage && open ../docs/frontend/index.html",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",
    "compile:production": "ng build --prod --stats-json",
    "compile:dev": "ng build",
    "build:dev": "run-s lint compile:dev",
    "build:production": "run-s lint compile:production docs",
    "serve:production": "ws --port 8080  --compress --directory dist/gfk-bba-frontend --spa index.html --static.maxage 36000",
    "stats:production": "webpack-bundle-analyzer dist/gfk-bba-frontend/stats.json",
    "integrate:dev": "rm -rf ../backend/Source/src/public/* && ng build gfk-bba-frontend --optimization --outputPath=../backend/Source/src/public --no-sourceMap",
    "integrate": "ng build gfk-bba-frontend --prod --configuration=production --optimization --outputPath=../backend/Source/src/public --no-sourceMap"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^6.1.8",
    "@angular/cdk": "^6.4.7",
    "@angular/common": "^6.1.8",
    "@angular/compiler": "^6.1.8",
    "@angular/core": "^6.1.8",
    "@angular/forms": "^6.1.8",
    "@angular/http": "^6.1.8",
    "@angular/platform-browser": "^6.1.8",
    "@angular/platform-browser-dynamic": "^6.1.8",
    "@angular/pwa": "^0.8.3",
    "@angular/router": "^6.1.8",
    "@angular/service-worker": "^6.1.8",
    "@dcs/ngx-tools": "^4.0.2",
    "@ng-bootstrap/ng-bootstrap": "^3.2.2",
    "@ng-select/ng-select": "^2.9.1",
    "@ngrx/effects": "^6.1.0",
    "@ngrx/router-store": "^6.1.0",
    "@ngrx/store": "^6.1.0",
    "@ngrx/store-devtools": "^6.1.0",
    "bootstrap": "^4.3.1",
    "core-js": "^2.5.4",
    "font-awesome": "^4.7.0",
    "json-stable-stringify": "^1.0.1",
    "md5": "^2.2.1",
    "ngrx-store-localstorage": "^5.0.1",
    "normalizr": "^3.2.4",
    "ramda": "^0.25.0",
    "run-s": "0.0.0",
    "rxjs": "^6.3.2",
    "sweetalert": "^2.1.0",
    "vis": "^4.21.0",
    "zone.js": "^0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.12.4",
    "@angular/cli": "^6.2.3",
    "@angular/compiler-cli": "^6.1.8",
    "@angular/language-service": "^6.1.8",
    "@angularclass/hmr": "^2.1.3",
    "@commitlint/cli": "^7.1.2",
    "@commitlint/config-conventional": "^7.1.2",
    "@compodoc/compodoc": "^1.1.10",
    "@dcs/schematics": "^1.2.1",
    "@ngrx/schematics": "^6.1.0",
    "@types/jasmine": "^2.8.8",
    "@types/jasminewd2": "^2.0.3",
    "@types/jest": "^23.3.2",
    "@types/node": "^10.11.0",
    "@types/ramda": "github:types/npm-ramda#dist",
    "@types/vis": "^4.21.8",
    "codelyzer": "^4.4.4",
    "commitizen": "^2.10.1",
    "conventional-changelog-cli": "^2.0.5",
    "cz-conventional-changelog": "^2.1.0",
    "husky": "^1.0.0-rc.15",
    "jasmine-spec-reporter": "^4.2.1",
    "jest": "^23.6.0",
    "jest-canvas-mock": "^1.1.0",
    "jest-preset-angular": "^6.0.1",
    "json-server": "^0.14.0",
    "lint-staged": "^7.3.0",
    "local-web-server": "^2.6.0",
    "ngrx-store-logger": "^0.2.2",
    "npm-run-all": "^4.1.3",
    "prettier": "^1.14.3",
    "protractor": "^5.4.1",
    "ts-node": "^7.0.1",
    "tsickle": "^0.33.0",
    "tslib": "^1.9.3",
    "tslint": "^5.11.0",
    "typedoc": "^0.15.0",
    "typescript": "~2.9.2",
    "webpack-bundle-analyzer": "^3.5.2"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "lint-staged": {
    "*.{js,json,css,md,ts,scss}": [
      "prettier --write",
      "git add"
    ]
  },
  "jest": {
    "preset": "jest-preset-angular",
    "setupTestFrameworkScriptFile": "<rootDir>/src/setup-jest.ts",
    "setupFiles": [
      "jest-canvas-mock"
    ],
    "coverageDirectory": "report/coverage",
    "collectCoverageFrom": [
      "projects/**/*.ts",
      "src/app/**/*.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 50,
        "functions": 50,
        "lines": 70,
        "statements": 70
      }
    },
    "modulePathIgnorePatterns": [
      "<rootDir>/dist"
    ]
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged",
      "pre-push": "run-s build:production"
    }
  }
}
